// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array keyboard;    

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;   // address of Keyboard RAM
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return keyboard[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int key, c;

        let key = 0;
        while (key = 0) {
            let key = Keyboard.keyPressed();
        }
        
        let c = key;
        while (~(key = 0)) {
            let key = Keyboard.keyPressed();
        }

        do Output.printChar(c);
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str, prevStr;
        var int len, maxLen, i;
        var int key, c;

        do Output.printString(message);
        let maxLen = 4;
        let str = String.new(maxLen);
        let prevStr = null;
        let len = 0;
        let c = 0;
       
        while (~(c = 128)) {    // newline
            let key = 0;
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }
            
            let c = key;
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }

            if (c = 128) {  // newline
                if (~(prevStr = null)) {
                    do prevStr.dispose();
                }
                do Output.println();    
                return str;
            }

            if (c = 129) {  // backspace
                if (len > 0) {
                    let len = len - 1;
                    do str.eraseLastChar();
                    do Output.backSpace();
                }
            } else {
                do Output.printChar(c);
                let str = str.appendChar(c);
                let len = len + 1;

                if (len = maxLen) {
                    let prevStr = str;
                    let maxLen = maxLen + 4;
                    let str = String.new(maxLen);

                    let i = 0;
                    while (i < len) {
                        let str = str.appendChar(prevStr.charAt(i));
                        let i = i + 1;
                    }
                }
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int num, c, key;
        var boolean firstChar, negative, buildStop;

        do Output.printString(message);
        let num = 0;
        let c = 0;
        let firstChar = true;
        let negative = false;
        let buildStop = false;
       
        while (~(c = 128)) { // newline
            let key = 0;
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }
            
            let c = key;
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }

            if (c = 129) {  // backspace
                let num = num / 10;
                do Output.backSpace();
            } else {
                do Output.printChar(c);
                if (~buildStop) {
                    if ((c > 47) & (c < 58)) {  // 0 - 9
                        let num = (num * 10) + (c - 48);
                    } else {
                        if (firstChar) {   
                            let firstChar = false;
                            if (c = 45) { // '-'
                                let negative = true;
                            }
                        } else {
                            let buildStop = true;
                        }
                    }
                }
            }
        }

        do Output.println();  
        if (negative) {
            return -num;
        }
        return num;
    }
}
